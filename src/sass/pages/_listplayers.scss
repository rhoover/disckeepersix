@use "../core" as core;
@use "../helpers" as helper;
@use "../component-helpers" as component;

.list-players {
  row-gap: 28.8px;
}

.header {
  @extend %inner-header;
}

.items {
  @extend %list-main;
  &-none {
    @extend %form-input-button;
    @extend %box-shadow;
    text-decoration: none;
    text-align: center;
  }
  & div:last-of-type {
    margin-bottom: 32px;
  }
  & a {
    @extend %form-input-button;
    text-align: center;
    text-decoration: none;
    font-size: var(--step-3);
  }
}

.item {
  @extend %list-item;
  grid-template-columns: 1fr .5fr;
  grid-template-rows: repeat(2, 1fr);
  @extend %box-shadow;
  & svg {
    @extend %list-svg;
  }
  &-remove {
    transform: translateX(100vw);
    transition: transform 1s cubic-bezier(0.350, 0.010, 0.430, 0.930) 0s;
  }
  &-primary {
    @extend %list-item;
    grid-template-rows: 1fr 1fr;
    padding: 0px;
    margin-bottom: 32px;
    &-name {
      grid-row: 2 / 3;
      grid-column: 1 / 3;
      align-self: center;
      justify-self: center;
      font-size: var(--step-3);
      padding: 8px;
    }
  }
  &-header {
    grid-row: 1 / 2;
    grid-column: 1 / 3;
    width: 100%;
    text-align: center;
    align-self: center;
    padding: 8px;
    border-bottom: 1px solid core.colorfunction(blue, dark25);
    background-color: rgba(core.colorfunction(blue, base), 0.15);
    font-size: var(--step-3);
    font-weight: 700;
  }
  &-name {
    @extend %list-name;
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    align-self: center
  }
  &-delete {
    @extend %list-delete-text;
    font-size: var(--step-0);
  }
}

.success {
  @extend %dialog-success;
  &-button {
    @extend %form-input-button;
    margin-top: 16px;
    width: 100%;
  }
  &-text {
    color: core.colorfunction(black, base);
  }
}

@keyframes show {
  from {
      opacity: 0;
  }
  to {
      opacity: 1;
  }
}